---

- name: initialize mysql instance
  shell: |
    set -o pipefail
    mysqld --initialize-insecure --user=mysql --basedir=/usr --datadir=/var/lib/mysql
  args:
      executable: /bin/bash
  become: true
  changed_when: false
  when: not (mysql_install_settings.use_mariadb | bool) and ansible_os_family == 'RedHat'

- name: required mysql directories exist
  file:
    path: "{{ item }}"
    owner: mysql
    group: root
    state: directory
    recurse: yes
    mode: '0755'
  changed_when: false
  with_items:
    - "{{ mysql_dir_list }}"

- name: standalone instance configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    backup: yes
  with_items:
    - "{{ mysql_conf_templates }}"
  when: not galera_cluster_settings.enabled | bool

- name: fix config in /etc/mysql/mysql.conf.d/mysqld.cnf
  lineinfile:
    path: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    state: absent
    regexp: "{{ item }}"
  with_items:
    - "(^datadir.*)"
    - "(^socket.*)"
    - "(^log-error.*)"
    - "(^pid-file.*)"
  when: ansible_os_family == 'Debian'

- name: start mysql service
  systemd:
    state: started
    name: "{{ mysql_service_daemon }}"
    enabled: yes

- name: apparmor | reload apparmor profiles
  command: "apparmor_parser -R {{ item }}"
  become: true
  with_items:
    - "/etc/apparmor.d/usr.sbin.mysqld"
  when: ansible_apparmor.status == 'enabled' and mysqld_apparmor_disabled['changed']

- name: stop mysql before bootstrap
  systemd:
    state: stopped
    name: "{{ mysql_service_daemon }}"
    enabled: yes
