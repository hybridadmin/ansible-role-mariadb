---

- name: install mysql packages
  action: >
    {{ ansible_pkg_mgr }} name={{ mysql_package_list }} state=present update_cache=yes
  notify:
    - initialize mysql
    - ensure mysqld dirs exist
    - add custom configuration files
    - fix config in /etc/mysql/mysql.conf.d/mysqld.cnf
    - mysqld bootstrap fix for logging
    - cluster master bootstrap
    - start mysql service

- name: Flush handlers
  meta: flush_handlers

###
- name: check mysqld error log
  shell: |
    set -o pipefail
    journalctl -xe | grep -E "mysqld|mariadb"
  args:
    executable: /bin/bash
  changed_when: False
###

## https://www.percona.com/doc/percona-xtradb-cluster/LATEST/howtos/crash-recovery.html
- name: disable bootstrapping on master node
  lineinfile:
    path: "/var/lib/mysql/grastate.dat"
    regexp: "{{ item }}"
    line: "safe_to_bootstrap: 0"
  with_items:
    - "(safe.*trap.*\\d{1})"
  when: galera_cluster_settings.enabled | bool

# sst fix after bootstrap TBC
#- name: create cluster sst user
#  shell: |
#    set -o pipefail
#    mysql -ne "{{ item }}"
#  args:
#    executable: /bin/bash
#  with_items:
#    - CREATE USER '{{ wsrep_sst_user }}'@'localhost' IDENTIFIED BY '{{ wsrep_sst_pass }}';
#    - GRANT RELOAD, PROCESS, LOCK TABLES, REPLICATION CLIENT ON *.* TO '{{ wsrep_sst_user }}'@'localhost';
#  changed_when: False
#  when: wsrep_sst_method == 'mariabackup'

#- name: Check master node is UP
#  wait_for:
#    host: "localhost"
#    port: "33069"
#    delay: 5
#    timeout: 300
#    state: started
#    msg: "Master is not yet UP"
#  register: master_is_up
#  connection: local
#  when: galera_cluster_settings.enabled | bool

# start mysql on slave nodes
